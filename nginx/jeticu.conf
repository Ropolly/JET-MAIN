# JET ICU Operations - Host Nginx Configuration
# Place this file in /etc/nginx/sites-available/jeticu.conf
# Then symlink: ln -s /etc/nginx/sites-available/jeticu.conf /etc/nginx/sites-enabled/

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
limit_req_zone $binary_remote_addr zone=general:10m rate=5r/s;

# Upstream backends
upstream jeticu_backend {
    server 127.0.0.1:8000;
    keepalive 32;
}

upstream jeticu_frontend {
    server 127.0.0.1:3000;
    keepalive 16;
}

# HTTP to HTTPS redirect
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Security headers even for redirects
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # Security headers for HIPAA compliance
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: https:; media-src 'self'; object-src 'none'; child-src 'none'; worker-src 'self'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;

    # Remove server signature for security
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml;

    # Client settings
    client_max_body_size 50M;
    client_body_timeout 120s;
    client_header_timeout 120s;

    # API proxy - forward to backend container
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        proxy_pass http://jeticu_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;

        # Handle large uploads
        proxy_request_buffering off;
    }

    # Admin static files - served from backend container volumes
    location /static/ {
        proxy_pass http://jeticu_backend;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # Media files with security - served from backend container volumes
    location /media/ {
        proxy_pass http://jeticu_backend;
        expires 7d;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options "nosniff" always;

        # Prevent execution of uploaded files
        location ~* \.(php|php3|php4|php5|php7|phtml|pl|py|pyc|pyo|sh|cgi|rb|exe|bat)$ {
            deny all;
        }
    }

    # Sensitive documents with authentication
    location /documents/ {
        # Authentication check (implement this endpoint in Django)
        auth_request /auth-check;

        proxy_pass http://jeticu_backend;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Content-Disposition "attachment" always;

        # Prevent execution and direct access
        location ~* \.(php|php3|php4|php5|php7|phtml|pl|py|pyc|pyo|sh|cgi|rb|exe|bat)$ {
            deny all;
        }
    }

    # Authentication endpoint for document access
    location = /auth-check {
        internal;
        proxy_pass http://jeticu_backend/api/auth/verify-document-access;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
    }

    # Health check endpoints
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy\n';
    }

    location /api/health/ {
        proxy_pass http://jeticu_backend;
        access_log off;
    }

    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Frontend application - proxy to frontend container
    location / {
        # Rate limiting for general access
        limit_req zone=general burst=10 nodelay;

        proxy_pass http://jeticu_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # SPA handling
        proxy_intercept_errors on;
        error_page 404 = @fallback;
    }

    # Fallback for SPA routing
    location @fallback {
        proxy_pass http://jeticu_frontend;
    }

    # Cache static assets from frontend
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://jeticu_frontend;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }

    # Security: Block access to sensitive files
    location ~ /\.(env|git|svn|htaccess|htpasswd) {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /\.(py|pyc|pyo|pyx|pyz)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block common attack patterns
    location ~* \.(aspx?|php|jsp|cgi)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
    }

    # Logging
    access_log /var/log/nginx/jeticu_access.log combined;
    error_log /var/log/nginx/jeticu_error.log warn;
}